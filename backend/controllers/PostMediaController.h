/**
 *
 *  PostMediaController.h
 *  This file is generated by drogon_ctl
 *
 */

#pragma once

#include <drogon/HttpController.h>
#include "PostMediaControllerBase.h"

#include "PostMedia.h"
using namespace drogon;
using namespace drogon_model::augventure_db;
/**
 * @brief this class is created by the drogon_ctl command.
 * this class is a restful API controller for reading and writing the post_media table.
 */

class PostMediaController: public drogon::HttpController<PostMediaController>, public PostMediaControllerBase
{
  public:
    METHOD_LIST_BEGIN
    ADD_METHOD_TO(PostMediaController::getOne,"/api/postmedia/{1}",Get,Options,"augventure::filters::LoginFilter");
    ADD_METHOD_TO(PostMediaController::updateOne,"/api/postmedia/{1}",Put,Options,"augventure::filters::LoginFilter");
    ADD_METHOD_TO(PostMediaController::deleteOne,"/api/postmedia/{1}",Delete,Options,"augventure::filters::LoginFilter");
    ADD_METHOD_TO(PostMediaController::get,"/api/postmedia",Get,Options,"augventure::filters::LoginFilter");
    ADD_METHOD_TO(PostMediaController::create,"/api/postmedia",Post,Options,"augventure::filters::LoginFilter");
    //ADD_METHOD_TO(PostMediaController::update,"/api/postmedia",Put,Options,"augventure::filters::LoginFilter");
    METHOD_LIST_END
     
    void getOne(const HttpRequestPtr &req,
                std::function<void(const HttpResponsePtr &)> &&callback,
                PostMedia::PrimaryKeyType &&id);
    void updateOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   PostMedia::PrimaryKeyType &&id);
    void deleteOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   PostMedia::PrimaryKeyType &&id);
    void get(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);
    void create(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);

};
